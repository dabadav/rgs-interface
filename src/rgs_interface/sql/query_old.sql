WITH SessionData AS (
    SELECT
        pp.PATIENT_ID,
        sp.SESSION_ID,
        sp.PRESCRIPTION_ID,
        pp.PROTOCOL_ID,
        prt.PROTOCOL_TYPE,
        pp.STARTING_DATE AS PRESCRIPTION_STARTING_DATE,
        pp.ENDING_DATE AS PRESCRIPTION_ENDING_DATE,
        pp.WEEKDAY,
        pp.SESSION_DURATION AS PRESCRIBED_SESSION_DURATION,
        pp.AR_MODE,
        sp.STARTING_DATE AS SESSION_DATE,
        sp.ENDING_DATE as ENDING_DATE,
        TIMESTAMPDIFF(SECOND, sp.STARTING_DATE, sp.ENDING_DATE) AS REAL_SESSION_DURATION,
        sp.STATUS
    FROM session_{rgs_mode} sp
    JOIN prescription_{rgs_mode} pp
        ON sp.PRESCRIPTION_ID = pp.PRESCRIPTION_ID
    JOIN protocol as pr
        ON pp.PROTOCOL_ID = pr.PROTOCOL_ID
    JOIN protocol_type as prt
        ON pr.PROTOCOL_TYPE_ID = prt.PROTOCOL_TYPE_ID
    WHERE sp.STATUS IN ('CLOSED', 'ABORTED')
)

SELECT
    p.PATIENT_ID,
    p.HOSPITAL_ID,
    p.PARETIC_SIDE,
    p.UPPER_EXTREMITY_TO_TRAIN,
    p.HAND_RAISING_CAPACITY,
    p.COGNITIVE_FUNCTION_LEVEL,
    p.HAS_HEMINEGLIGENCE,
    p.GENDER,
    p.SKIN_COLOR,
    TIMESTAMPDIFF(YEAR, p.BIRTH_DATE, sd.SESSION_DATE) AS AGE,
    p.VIDEOGAME_EXP,
    p.COMPUTER_EXP,
    p.COMMENTS,
    p.PTN_HEIGHT_CM,
    p.ARM_SIZE_CM,

    sd.PRESCRIPTION_ID,
    sd.SESSION_ID,
    sd.PROTOCOL_ID,
    sd.PRESCRIPTION_STARTING_DATE,
    sd.PRESCRIPTION_ENDING_DATE,
    sd.SESSION_DATE,
    HOUR(sd.SESSION_DATE) AS STARTING_HOUR,
    CASE
        WHEN sd.SESSION_DATE IS NULL THEN NULL
        WHEN HOUR(sd.SESSION_DATE) BETWEEN 5 AND 11 THEN 'MORNING'
        WHEN HOUR(sd.SESSION_DATE) BETWEEN 12 AND 17 THEN 'AFTERNOON'
        WHEN HOUR(sd.SESSION_DATE) BETWEEN 18 AND 21 THEN 'EVENING'
        ELSE 'NIGHT'
    END AS STARTING_TIME_CATEGORY,

    sd.STATUS,

    sd.PROTOCOL_TYPE,
    sd.AR_MODE,
    CASE
        WHEN sd.WEEKDAY = 'MONDAY' THEN 0
        WHEN sd.WEEKDAY = 'TUESDAY' THEN 1
        WHEN sd.WEEKDAY = 'WEDNESDAY' THEN 2
        WHEN sd.WEEKDAY = 'THURSDAY' THEN 3
        WHEN sd.WEEKDAY = 'FRIDAY' THEN 4
        WHEN sd.WEEKDAY = 'SATURDAY' THEN 5
        WHEN sd.WEEKDAY = 'SUNDAY' THEN 6
        ELSE NULL
    END AS WEEKDAY_INDEX,
    sd.REAL_SESSION_DURATION,
    sd.PRESCRIBED_SESSION_DURATION,
    CAST(r.SESSION_DURATION AS INT) AS SESSION_DURATION,
    
    CASE
        WHEN sd.PRESCRIBED_SESSION_DURATION > 0 THEN r.SESSION_DURATION / sd.PRESCRIBED_SESSION_DURATION
        ELSE NULL
    END AS ADHERENCE,

    CAST(r.TOTAL_SUCCESS AS INT) AS TOTAL_SUCCESS,
    CAST(r.TOTAL_ERRORS AS INT) AS TOTAL_ERRORS,
    CAST(r.SCORE AS INT) AS SCORE

FROM patient p
LEFT JOIN SessionData sd ON p.PATIENT_ID = sd.PATIENT_ID
LEFT JOIN (
    SELECT
        SESSION_ID,
        MAX(CASE WHEN RECORDING_KEY = 'sessionDuration(seconds)' THEN RECORDING_VALUE END) AS SESSION_DURATION,
        MAX(CASE WHEN RECORDING_KEY = 'totalSuccess' THEN RECORDING_VALUE END) AS TOTAL_SUCCESS,
        MAX(CASE WHEN RECORDING_KEY = 'totalErrors' THEN RECORDING_VALUE END) AS TOTAL_ERRORS,
        MAX(CASE WHEN RECORDING_KEY = 'score' THEN RECORDING_VALUE END) AS SCORE
    FROM recording_{rgs_mode}
    GROUP BY SESSION_ID
) r ON sd.SESSION_ID = r.SESSION_ID

WHERE p.PATIENT_ID IN :patient_ids
ORDER BY p.PATIENT_ID, sd.SESSION_DATE;
